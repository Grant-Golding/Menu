package Module3;

import javax.swing.*;
import java.awt.event.*;
import java.awt.BorderLayout;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;
import java.awt.Color;
import java.awt.Dimension;

public class MyFrame extends JFrame implements ActionListener {

    private JTextArea textDisplay;
    private JPanel panel;
    private JMenuItem dateTimeItem, saveItem, changeColorItem, exitItem;

    public MyFrame() {
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setSize(500, 500);
        this.setLayout(new BorderLayout());

        textDisplay = new JTextArea(5, 40);
        this.add(textDisplay, BorderLayout.NORTH);

        JMenuBar menuBar = new JMenuBar();
        JMenu menu = new JMenu("Menu");

        dateTimeItem = new JMenuItem("Show Date & Time");
        saveItem = new JMenuItem("Save Text Box Content");
        changeColorItem = new JMenuItem("Change Background Color");
        exitItem = new JMenuItem("Exit");

        dateTimeItem.addActionListener(this);
        saveItem.addActionListener(this);
        changeColorItem.addActionListener(this);
        exitItem.addActionListener(this);

        menu.add(dateTimeItem);
        menu.add(saveItem);
        menu.add(changeColorItem);
        menu.add(exitItem);

        menuBar.add(menu);
        this.setJMenuBar(menuBar);

        panel = new JPanel();
        panel.setPreferredSize(new Dimension(475, 400));
        this.add(panel, BorderLayout.CENTER);

        this.setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == dateTimeItem) {
            String dateTime = new SimpleDateFormat().format(new Date());
            textDisplay.append(dateTime + "\n");
        }

        if (e.getSource() == saveItem) {
            saveTextToFile();
        }

        if (e.getSource() == changeColorItem) {
            changeBackgroundColor();
        }

        if (e.getSource() == exitItem) {
            System.exit(0);
        }
    }

    private void saveTextToFile() {
        BufferedWriter writer;
        try {
            writer = new BufferedWriter(new FileWriter("log.txt"));
            writer.write(textDisplay.getText());
            writer.close();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    private void changeBackgroundColor() {
        Random random = new Random();
        float hue = 0.25f + random.nextFloat() * 0.25f;
        Color randomGreen = Color.getHSBColor(hue, 1.0f, 1.0f);
        panel.setBackground(randomGreen);
    }
}
